def qselect(A,k):  if len(A)<k:return A  pivot = A[-1]  right = [pivot] + [x for x in A[:-1] if x>=pivot]  rlen = len(right)  if rlen==k:    return right  if rlen>k:    return qselect(right, k)  else:    left = [x for x in A[:-1] if x<pivot]    return qselect(left, k-rlen) + right##排序，返回前K个大数的数组def predict_seq1(a,b):    c=[]    for x in a:        for y in b:            x=1 if x==y else x        c.append(x)    return c###对softmax输出的数组操作，返回前K个大数替换为1的数组def predict_seq2(a):    c=[]    for x in a:        x=0 if x!=1 else x        c.append(x)    return c### 将数组中不为0的元素替换为0a=[18,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17]print(qselect(a,10))b=qselect(a,10)print(predict_seq1(a,b))c=predict_seq1(a,b)print(predict_seq2(c))